{"ast":null,"code":"var _jsxFileName = \"/Users/auyongtingting/Desktop/tyc_hangman/src/components/hangman.js\";\nimport React, { Component } from 'react';\nimport '../styles/hangman.css';\nimport { randomWord } from './words.js';\nimport { FaSadTear } from 'react-icons/fa';\nimport { BiHappyBeaming } from 'react-icons/bi';\nimport try0 from '../images/0.jpg';\nimport try1 from '../images/1.jpg';\nimport try2 from '../images/2.jpg';\nimport try3 from '../images/3.jpg';\nimport try4 from '../images/4.jpg';\nimport try5 from '../images/5.jpg';\nimport try6 from '../images/6.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Hangman extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleGuess = e => {\n      let letter = e.target.value;\n      this.setState(st => ({\n        guessed: st.guessed.add(letter),\n        mistake: st.mistake + (st.answer.includes(letter) ? 0 : 1)\n      }));\n    };\n\n    this.nextButton = () => {\n      this.setState({\n        mistake: 0,\n        guessed: new Set([]),\n        answer: randomWord()\n      });\n    };\n\n    this.state = {\n      mistake: 0,\n      // Number of wrong guesses\n      guessed: new Set([]),\n      // New array to store the incorrect and correct guesses\n      answer: randomWord() // A function called from word.js (choose a random word from the array)\n\n    };\n  } // Functions to be called in return ()  \n\n\n  guessedWord() {\n    return this.state.answer.split(\"\").map(letter => this.state.guessed.has(letter) ? letter : \" _ \");\n  }\n\n  generateButtons() {\n    return \"abcdefghjklmnopqrstuvwxyz\".split(\"\").map(letter => /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"btn letterButtons m-2\",\n      value: letter,\n      onClick: this.handleGuess,\n      disabled: this.state.guessed.has(letter),\n      children: letter\n    }, letter, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this));\n  }\n\n  // Rendering to display on \n  render() {\n    const gameOver = this.state.mistake >= this.props.maxWrong;\n    const isWinner = this.guessedWord().join(\"\") === this.state.answer;\n\n    const win = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You won!!! \", /*#__PURE__*/_jsxDEV(BiHappyBeaming, {\n        size: \"30px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }, this);\n\n    const lose = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"outcome\",\n      children: [\"Better luck next time! \", /*#__PURE__*/_jsxDEV(FaSadTear, {\n        size: \"30px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 68\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 22\n    }, this);\n\n    let gameStat = this.generateButtons();\n\n    if (isWinner) {\n      gameStat = win;\n    }\n\n    if (gameOver) {\n      gameStat = lose;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"body\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Hangman container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"Hangman\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"NumWrongGuesses\",\n          children: [\"Wrong Guesses: \", this.state.mistake, \" of \", this.props.maxWrong]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            class: \"hangmanFigure\",\n            src: this.props.images[this.state.mistake],\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"subtitle\",\n            children: \"Guess the Programming Language: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"randomWord\",\n            children: !gameOver ? this.guessedWord() : this.state.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", gameStat]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"nextButton\",\n            onClick: this.nextButton,\n            children: \"Next Round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nHangman.defaultProps = {\n  maxWrong: 6,\n  images: [try0, try1, try2, try3, try4, try5, try6]\n};\nexport default Hangman;","map":{"version":3,"names":["React","Component","randomWord","FaSadTear","BiHappyBeaming","try0","try1","try2","try3","try4","try5","try6","Hangman","constructor","props","handleGuess","e","letter","target","value","setState","st","guessed","add","mistake","answer","includes","nextButton","Set","state","guessedWord","split","map","has","generateButtons","render","gameOver","maxWrong","isWinner","join","win","lose","gameStat","images","defaultProps"],"sources":["/Users/auyongtingting/Desktop/tyc_hangman/src/components/hangman.js"],"sourcesContent":["import React, { Component } from 'react';\nimport '../styles/hangman.css';\nimport { randomWord } from './words.js';\nimport { FaSadTear } from 'react-icons/fa'\nimport { BiHappyBeaming } from 'react-icons/bi'\n\nimport try0 from '../images/0.jpg'; \nimport try1 from '../images/1.jpg'; \nimport try2 from '../images/2.jpg'; \nimport try3 from '../images/3.jpg'; \nimport try4 from '../images/4.jpg'; \nimport try5 from '../images/5.jpg'; \nimport try6 from '../images/6.jpg'; \n\nclass Hangman extends Component {\n    static defaultProps = {\n        maxWrong : 6, \n        images : [try0, try1, try2, try3, try4, try5, try6]\n    }\n\n    constructor (props) {\n        super(props);\n        this.state = {\n            mistake: 0, // Number of wrong guesses\n            guessed: new Set([]), // New array to store the incorrect and correct guesses\n            answer : randomWord(), // A function called from word.js (choose a random word from the array)\n        }\n    }\n\n    // Functions to be called in return ()  \n    guessedWord() {\n        return this.state.answer.split(\"\").map(letter => (this.state.guessed.has(letter) ? letter : \" _ \")); \n    }\n\n    generateButtons() {\n        return \"abcdefghjklmnopqrstuvwxyz\".split(\"\").map(letter => (\n          <button\n            class='btn letterButtons m-2'\n            key={letter}\n            value={letter}\n            onClick={this.handleGuess}\n            disabled={this.state.guessed.has(letter)}\n          >\n            {letter}\n          </button>\n        ));\n    }\n\n    handleGuess=e=> {\n        let letter = e.target.value;\n        this.setState( st => ({\n            guessed: st.guessed.add(letter), \n            mistake: st.mistake + (st.answer.includes (letter) ? 0 : 1)\n        })); \n    }\n    \n    nextButton = () => { \n        this.setState({\n            mistake: 0, \n            guessed: new Set([]),\n            answer: randomWord()\n        });\n    }\n\n    // Rendering to display on \n    render () {\n        \n        const gameOver = this.state.mistake >= this.props.maxWrong;\n        const isWinner = this.guessedWord().join(\"\") === this.state.answer;\n        const win = <p>You won!!! <BiHappyBeaming size=\"30px\"/></p>\n        const lose = <p className=\"outcome\">Better luck next time! <FaSadTear size=\"30px\"/></p>\n        let gameStat = this.generateButtons(); \n        \n        if (isWinner) {\n            gameStat = win\n        }\n\n        if (gameOver) {\n            gameStat = lose\n        }\n\n        return (\n            <body>\n                <div className=\"Hangman container\">\n                    <h1 className=\"text-center\">Hangman</h1>\n     \n                    <div className=\"NumWrongGuesses\">\n                        Wrong Guesses: {this.state.mistake} of {this.props.maxWrong} \n                    </div>\n                    <div>\n                        <img class=\"hangmanFigure\" src={this.props.images[this.state.mistake]} alt=\"\"/>\n                    </div>\n                    <br></br>\n                    <div className=\"text-center\">\n                        <p className=\"subtitle\">Guess the Programming Language: </p>\n                        <p className=\"randomWord\">\n                            {!gameOver ? this.guessedWord(): this.state.answer}\n                        </p>\n                        <p> {gameStat}</p>   \n                        <button className=\"nextButton\" onClick={this.nextButton}>Next Round</button>\n                    </div>\n                </div>\n            </body>\n\n        )\n    }\n}\n\nexport default Hangman; \n"],"mappings":"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"},"metadata":{},"sourceType":"module"}